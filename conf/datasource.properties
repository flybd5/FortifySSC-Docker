# JDBC URL
jdbc.url=

# JDBC driver class
db.driver.class=com.mysql.jdbc.Driver

# Database access username
db.username=

# Database access password
db.password=

# Hibernate dialect
db.dialect=com.fortify.manager.util.hibernate.MySQLDialect

# Database connection validation query
db.validationQuery=select 1

# Database specific LIKE clause special characters
db.like.specialCharacters=%_\\

# Database connection pool maximum active connections
db.maxActive=100

# Database connection pool maximum idle connections
db.maxIdle=50

# Database connection pool maximum connection return wait time
# The maximum number of milliseconds that the pool will wait (when there are no available connections)
# for a connection to be returned before throwing an exception, or -1 to wait indefinitely.
db.maxWait=60000

# The default auto-commit state of connections created by this pool.
db.defaultAutoCommit=false

# Whether or not a connection is considered abandoned and eligible
# for removal if it has been idle longer than the removeAbandonedTimeout
db.removeAbandoned=true

# Timeout in seconds before an abandoned connection can be removed.
# Use a high value because of DBCP bug https://issues.apache.org/jira/browse/DBCP-343
# Once we upgrade to DBCP 1.3.1 or 1.4.1 when released, we can revert to lower value
db.removeAbandonedTimeout=3000

# Determines whether or not to log stack traces for application code which abandoned a Statement or Connection.
db.logAbandoned=true

# Sets the number of milliseconds to sleep between runs of the idle object evictor thread.
# When non-positive, no idle object evictor thread will be run.
db.timeBetweenEvictionRunsMillis=1000000

# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any).
# When non-positive, no objects will be evicted from the pool due to idle time alone.
db.minEvictableIdleTimeMillis=1000000

# JDBC specific connection properties
db.connection.properties=
